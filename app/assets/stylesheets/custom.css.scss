@import 'reset'; //Resets styles to be uniform across browsers

//*============MIXINS============*/
	//Rounds corners individually. Default set.
	//ex: @include rounded; for default
	//or ex: @include rounded(10px, 10px, 0, 0); for rounded top
	@mixin rounded($tlcurve: 10px, $trcurve: 10px, $brcurve: 10px, $blcurve: 10px) {
		-webkit-border-top-left-radius: $tlcurve;
		border-top-left-radius: $tlcurve;
		-o-border-top-left-radius: $tlcurve;
		-ms-border-top-left-radius: $tlcurve;
		-moz-border-radius-topleft: $tlcurve;
		-webkit-border-top-right-radius: $trcurve;
		border-top-right-radius: $trcurve;
		-o-border-top-right-radius: $trcurve;
		-ms-border-top-right-radius: $trcurve;
		-moz-border-radius-topright: $trcurve;
		-webkit-border-bottom-right-radius: $brcurve;
		border-bottom-right-radius: $brcurve;
		-o-border-bottom-right-radius: $brcurve;
		-ms-border-bottom-right-radius: $brcurve;
		-moz-border-radius-bottomright: $brcurve;
		-webkit-border-bottom-left-radius: $blcurve;
		border-bottom-left-radius: $blcurve;
		-o-border-bottom-left-radius: $blcurve;
		-ms-border-bottom-left-radius: $blcurve;
		-moz-border-radius-bottomleft: $blcurve;
	}
	//Rounds all corners the same. Default set.
	//ex: @include round; for default
	//or ex: @includ round(20px);
	@mixin round($curve: 10px) {
		-webkit-border-radius: $curve;
		border-radius: $curve;
		-o-border-radius: $curve;
		-ms-border-radius: $curve;
		-moz-border-radius: $curve;
	}
	
	//Applies boxshodow to element. Default set.
	//ex: @include boxshadow; for default
	//ex: @include boxshadow(.30, 0px, 0px, 7px, 1px); to set each variable
	@mixin boxshadow ($trans: .30, $horshad: 0px, $vershad: 0px, $blurshad: 7px, $spreadshad: 1px){
		-webkit-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-o-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-ms-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
		-moz-box-shadow:rgba(0, 0, 0, $trans) $horshad $vershad $blurshad $spreadshad;
	}

	//This allows you to prepend or append content onto something
	//Example:
	//#play {
	//	@include addstuff(after, "p", "}");
	//	@include addstuff(before, "p", "{");
	//}
	//Will put "{" before and "}" after the p element in the div #play
	@mixin addstuff($befaft, $selector, $message) {
		#{$selector}:#{$befaft} {
			content: $message;
		}
	}

	//Set up fluid grid system
	//ex: @include grid-unit(3); for 3 columns wide
	$column-width: percentage(60px/980px);
	$gutter-width: percentage(20px/980px);
	@mixin grid-unit($span, $lmargin: 0, $rmargin: 0) {
		width: ($column-width * $span) + ($gutter-width * ($span - 1));
		margin-left: $lmargin;
		margin-right: $rmargin;
	}
//*============END MIXINS============*/


//*============DEFINE COLORS============*/
	$text: #545252;
	$main: #E6A637;
	$accent: #A637E6;
	$success: #bddbb2;
	$error: #f0adad;
//*============END DEFINE COLORS============*/


//*============TEXT STYLING============*/
	//Sets text by type
	//ex: @include setfont(menu); for menu text
	//MUST add each font to head.php like this: 
	//		<!--Quicksand - text-->
	//		<link href='http://fonts.googleapis.com/css?family=Quicksand:400,700' rel='stylesheet' type='text/css'>
	@mixin setfont($type) {
		@if $type == text {
			font: {
				family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
				size: 1em;
			}
		}
		@if $type == code {
			font: {
				family: Courier, Monaco, monospace;
				size: .9em;
			}
		}
	}	

	body {
		@include setfont(text);
		color: $text;
	}	

	p, ul {
		line-height:120%;
		text-align:justify;
	}	

	p {
		margin-bottom: 1em;
	}	

	a, a:visited {
		color: $main;
		text-decoration: none;
		&:hover, &:focus, &:active {
			text-decoration: underline;
		}
	}	

	i, em {
		font-style:italic;
	}	

	strong {
		font-weight:bold;
	}	
	
	span.main {
		color: $main;
	}
	
	pre {	
		@include setfont(code);
		margin: 10px;
		padding: 10px;
		white-space: pre-wrap;
		white-space: -moz-pre-wrap;
		white-space: -pre-wrap;
		white-space: -o-pre-wrap;
		word-wrap: break-word;
		overflow: auto;
		background-color: lighten(gray, 40%);
		-mox-box-shadow: inset 0 0 10px lighten(gray, 20%);
		-webkit-box-shadow: inset 0 0 10px lighten(gray, 20%);
		box-shadow: inset 0 0 10px lighten(gray, 20%);
		&.debug_dump {
			margin: 40px 0 0 0;
			padding: 20px;
			@include round;
		}
	}

	div.alert {
		padding: 20px;
		margin: 10px 0 0 0;
		@include round(5px);
		&.alert-success {
			background-color: $success;
			border: 1px solid darken($success, 20%);
		}
		&.alert-error {
			background-color: $error;
			border: 1px solid darken($error, 20%);
		}
	}
//*============END TEXT STYLING============*/


//*============MAIN PAGE ELEMENTS============*/
	body {
		position:relative; 
		margin: 0 auto;
	}	

	#wrapper {
		width: 90%;
		max-width: 980px;
		min-width: 600px;
		margin: 0 auto;
	}

	.clear {
		clear:both;
	}

	.btn {
	  background: #E6A637;
	  background-image: -webkit-linear-gradient(top, lighten(gray, 20%), gray);
	  background-image: -moz-linear-gradient(top, lighten(gray, 20%), gray);
	  background-image: -ms-linear-gradient(top, lighten(gray, 20%), gray);
	  background-image: -o-linear-gradient(top, lighten(gray, 20%), gray);
	  background-image: linear-gradient(to bottom, lighten(gray, 20%), gray);
	  -webkit-border-radius: 14;
	  -moz-border-radius: 14;
	  border-radius: 14px;
	  color: #fff;
	  padding: 10px 20px 10px 20px;
	  text-decoration: none;
	  border: none;
	  &:hover {
		  background: #ebc27b;
		  background-image: -webkit-linear-gradient(top, gray, lighten(gray, 20%));
		  background-image: -moz-linear-gradient(top, gray, lighten(gray, 20%));
		  background-image: -ms-linear-gradient(top, gray, lighten(gray, 20%));
		  background-image: -o-linear-gradient(top, gray, lighten(gray, 20%));
		  background-image: linear-gradient(to bottom, gray, lighten(gray, 20%));
		  text-decoration: none;
	  }
	}

	table {
		border: 1px solid $main;
		td {
			vertical-align: middle;
		}
		thead {
			background-color: white;
			tr {
				height: 2.5em;
				th {
					vertical-align: middle;
					color: $main;
					font-weight: bold;
				}
			}
		}
		tbody {
			tr {
				height: 2em;
				&:nth-child(even) {
					background-color:white;
				}
				td {
					text-align: center;
				}
			}
		}
	}
//*============END MAIN PAGE ELEMENTS============*/

//*============HEADER============*/
	header {
		border-bottom: 1px solid $main;
		padding: 20px;
		h1 {
			font-size: 200%;
			display: inline;
		}
		ul {
			top: -24px;
			position: relative;
			float: right;
			text-align: center;
			li {
				display: inline;
				&:not(:first-child) {
					&::before {
						content: " | ";
					}
				}
			}
		}
	}
//*============END HEADER============*/

//*============SIDEBAR============*/
	#sidebar {
		background-color: lighten(gray, 30%);
		@include grid-unit(3, $gutter-width, 0);
		float: left;
	}
//*============END SIDEBAR============*/

//*============CONTENT============*/
	#content {
		background-color: white;
		@include grid-unit(9, $gutter-width, $gutter-width);
		float: right;
	}
//*============END CONTENT============*/

//*============FORMS============*/
	form {
		background-color: #F8F8F8;
		margin: 20px auto 0 auto;
		width: 460px;
		padding: 20px;
		@include round(5px);
		h2 {
			font-size: 200%;
			padding: 20px;
			background-color: $main;
			margin: -20px -20px 20px -20px;
			color: white;
			// text-shadow: 1px 1px 1px lighten($text, 20%);
			@include rounded(5px, 5px, 0, 0);
			border-bottom: 1px solid darken($main, 15%);
			span {
				display: block;
				font-size: .5em;
				margin-top: 5px;
				text-shadow: none;
			}
		}
		label {
			display: inline-block;
			margin: 10px 0 5px 0;
		}
		input[type="text"], input[type="email"], input[type="password"], input[type="tel"], input[type="url"], textarea {
			width: 97%;
			height: 2em;
			line-height: 2em;
			padding-left: 10px;
			border: 1px solid lighten(gray, 30%);
			outline: 0;
			@include round(5px);
			&:focus {
				outline-style:none;
				outline-width:initial;
				outline-color:#000000;	
				-webkit-box-shadow: lighten(gray, 40%) 0px 0px 3px 1px inset;
				box-shadow: lighten(gray, 40%) 0px 0px 3px 1px inset;
				-o-box-shadow: lighten(gray, 40%) 0px 0px 3px 1px inset;
				-ms-box-shadow: lighten(gray, 40%) 0px 0px 3px 1px inset;
				-moz-box-shadow: lighten(gray, 40%) 0px 0px 3px 1px inset;
			}
		}
		textarea {
			height: 10em;
		}
		ul.errors {
			color: red;
		}
		.field_with_errors {
			input {
				border: 1px solid red;
			}
		}
		.submit {
			width: 100%;
			text-align: center;
			margin-top: 20px;
			input {
				cursor: pointer;
				background-color: $main;
				padding: 10px 20px 12px 20px;
				@include round;
				font-size: 1.2em;
				color: white;
				border: none;
				&:hover {
					background-color: darken($main, 10%);
				}
			}
		}
	}
//*============FORMS============*/

//*============FOOTER============*/
	footer {
		background-color: orange;
		padding: 10px 20px;
		clear: both;
		color: white;
		ul {
			text-align: center;
			li {
				display: inline;
				&:not(:first-child) {
					&::before {
						content: " | ";
						color: $text;
					}
				}
			}
		}
		a, a:visited {
			color: white;
			text-decoration: underline;
			&:hover, &:focus, &:active { 
			}
		}
	}
//*============END FOOTER============*/

//*============RESPONSIVE DESIGN CHANGES============*/

	//*----------max-width XXXXpx----------*/
//*============END RESPONSIVE DESIGN CHANGES============*/
